{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API Documentation",
        "title": "Baznas Master Service",
        "termsOfService": "https://dospecs.monstercode.net/en/guide/tnc.html",
        "contact": {
            "name": "Armada Muhammad",
            "email": "armada_muhammad@student.uns.ac.id"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/": {
            "get": {
                "description": "show basic response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "show basic response",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/accounts": {
            "get": {
                "description": "List of Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List of Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Account"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create new Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "description": "Account data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AccountAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account data",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/accounts/{id}": {
            "get": {
                "description": "Get a Account by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get a Account by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Account by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update Account by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Account data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AccountAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account data",
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Account by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Delete Account by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/balances": {
            "get": {
                "description": "List of Balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "List of Balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Balance"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new Balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Create new Balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "description": "Balance data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BalanceAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance data",
                        "schema": {
                            "$ref": "#/definitions/model.Balance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/balances/{id}": {
            "get": {
                "description": "Get a Balance by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Get a Balance by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Balance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Balance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Balance by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Update Balance by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Balance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Balance data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BalanceAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Balance data",
                        "schema": {
                            "$ref": "#/definitions/model.Balance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Balance by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Balance"
                ],
                "summary": "Delete Balance by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Balance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "List of Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List of Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Category"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new Category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create new Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "description": "Category data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CategoryAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category data",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Get a Category by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get a Category by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Category by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update Category by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CategoryAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category data",
                        "schema": {
                            "$ref": "#/definitions/model.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Category by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete Category by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/info.json": {
            "get": {
                "description": "show info response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "show info response",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/payments": {
            "get": {
                "description": "List of Payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "List of Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Payment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new Payment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Create new Payment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "description": "Payment data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PaymentAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment data",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/payments/{id}": {
            "get": {
                "description": "Get a Payment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Get a Payment by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Payment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Update Payment by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PaymentAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment data",
                        "schema": {
                            "$ref": "#/definitions/model.Payment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Payment by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Delete Payment by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "description": "List of Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "List of Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Transaction"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new Transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create new Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "description": "Transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "description": "Get a Transaction by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a Transaction by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Transaction by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Update Transaction by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransactionAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction data",
                        "schema": {
                            "$ref": "#/definitions/model.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Transaction by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete Transaction by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "List of User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List of User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Page number start from zero",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Size per page, default `0`",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field, adding dash (`-`) at the beginning means descending and vice versa",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Select specific fields with comma separated",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "custom filters, see [more details](https://github.com/morkid/paginate#filter-format)",
                        "name": "filters",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Page"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create new User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get a User by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a User by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update User by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User-ID",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "2 character language code",
                        "name": "Accept-Language",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserAPI"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete User by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/lib.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "lib.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "response message",
                    "type": "string"
                },
                "status": {
                    "description": "http status",
                    "type": "integer"
                }
            }
        },
        "model.Account": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code",
                    "type": "string",
                    "example": "BBCA"
                },
                "created_at": {
                    "description": "created at automatically inserted on post",
                    "type": "string",
                    "format": "date-time"
                },
                "creator_id": {
                    "description": "creator id",
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "description": "Description",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "id": {
                    "description": "model ID",
                    "type": "string",
                    "format": "uuid"
                },
                "modifier_id": {
                    "description": "modifier id",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "example": "Bank BCA"
                },
                "number": {
                    "description": "Number",
                    "type": "string",
                    "example": "3425-3234-2341"
                },
                "sort": {
                    "description": "sort (increment)",
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "description": "updated at automatically changed on put or add on post",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "model.AccountAPI": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code",
                    "type": "string",
                    "example": "BBCA"
                },
                "description": {
                    "description": "Description",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "example": "Bank BCA"
                },
                "number": {
                    "description": "Number",
                    "type": "string",
                    "example": "3425-3234-2341"
                }
            }
        },
        "model.Balance": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Category",
                    "type": "string"
                },
                "created_at": {
                    "description": "created at automatically inserted on post",
                    "type": "string",
                    "format": "date-time"
                },
                "creator_id": {
                    "description": "creator id",
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "id": {
                    "description": "model ID",
                    "type": "string",
                    "format": "uuid"
                },
                "income": {
                    "description": "Income",
                    "type": "number",
                    "example": 50000
                },
                "modifier_id": {
                    "description": "modifier id",
                    "type": "string",
                    "format": "uuid"
                },
                "outcome": {
                    "description": "Outcome",
                    "type": "number",
                    "example": 40000
                },
                "saldo": {
                    "description": "Saldo",
                    "type": "number",
                    "example": 1000000
                },
                "sort": {
                    "description": "sort (increment)",
                    "type": "integer",
                    "example": 1
                },
                "transactionid": {
                    "description": "TransactionID",
                    "type": "string",
                    "format": "uuid"
                },
                "updated_at": {
                    "description": "updated at automatically changed on put or add on post",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "model.BalanceAPI": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Category",
                    "type": "string"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "income": {
                    "description": "Income",
                    "type": "number",
                    "example": 50000
                },
                "outcome": {
                    "description": "Outcome",
                    "type": "number",
                    "example": 40000
                },
                "saldo": {
                    "description": "Saldo",
                    "type": "number",
                    "example": 1000000
                },
                "transactionid": {
                    "description": "TransactionID",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "model.Category": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Category",
                    "type": "string"
                },
                "code": {
                    "description": "Code",
                    "type": "string",
                    "example": "12"
                },
                "created_at": {
                    "description": "created at automatically inserted on post",
                    "type": "string",
                    "format": "date-time"
                },
                "creator_id": {
                    "description": "creator id",
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "description": "Description",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "id": {
                    "description": "model ID",
                    "type": "string",
                    "format": "uuid"
                },
                "is_pemasukan": {
                    "description": "IsPemasukan",
                    "type": "boolean",
                    "example": true
                },
                "level": {
                    "description": "Level",
                    "type": "integer"
                },
                "modifier_id": {
                    "description": "modifier id",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "example": "infaq"
                },
                "parent_id": {
                    "description": "ParentID",
                    "type": "string",
                    "format": "uuid"
                },
                "sort": {
                    "description": "sort (increment)",
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "description": "updated at automatically changed on put or add on post",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "model.CategoryAPI": {
            "type": "object",
            "properties": {
                "category": {
                    "description": "Category",
                    "type": "string"
                },
                "code": {
                    "description": "Code",
                    "type": "string",
                    "example": "12"
                },
                "description": {
                    "description": "Description",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "is_pemasukan": {
                    "description": "IsPemasukan",
                    "type": "boolean",
                    "example": true
                },
                "level": {
                    "description": "Level",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "example": "infaq"
                },
                "parent_id": {
                    "description": "ParentID",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "model.Page": {
            "type": "object",
            "properties": {
                "first": {
                    "description": "indicate first value",
                    "type": "boolean",
                    "example": true
                },
                "items": {
                    "description": "items of data",
                    "type": "object"
                },
                "last": {
                    "description": "indicate last value",
                    "type": "boolean",
                    "example": false
                },
                "max_page": {
                    "description": "maximum pages for current schema",
                    "type": "integer",
                    "example": 9
                },
                "page": {
                    "description": "current page, start from zero",
                    "type": "integer",
                    "example": 0
                },
                "size": {
                    "description": "size per page, default `10`",
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "description": "total data without filters",
                    "type": "integer",
                    "example": 100
                },
                "total_pages": {
                    "description": "total pages",
                    "type": "integer",
                    "example": 10
                },
                "visible": {
                    "description": "current length",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "model.Payment": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code",
                    "type": "string",
                    "example": "CSH"
                },
                "created_at": {
                    "description": "created at automatically inserted on post",
                    "type": "string",
                    "format": "date-time"
                },
                "creator_id": {
                    "description": "creator id",
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "description": "Description",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "id": {
                    "description": "model ID",
                    "type": "string",
                    "format": "uuid"
                },
                "modifier_id": {
                    "description": "modifier id",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "example": "Cash"
                },
                "sort": {
                    "description": "sort (increment)",
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "description": "updated at automatically changed on put or add on post",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "model.PaymentAPI": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code",
                    "type": "string",
                    "example": "CSH"
                },
                "description": {
                    "description": "Description",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "example": "Cash"
                }
            }
        },
        "model.Transaction": {
            "type": "object",
            "properties": {
                "categoryid": {
                    "description": "CategoryID",
                    "type": "string",
                    "format": "uuid"
                },
                "contact": {
                    "description": "Contact",
                    "type": "string",
                    "example": "08423423432"
                },
                "contact_name": {
                    "description": "Contact Name",
                    "type": "string",
                    "example": "pak guru"
                },
                "created_at": {
                    "description": "created at automatically inserted on post",
                    "type": "string",
                    "format": "date-time"
                },
                "creator_id": {
                    "description": "creator id",
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "description": "Description",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "discount": {
                    "description": "Discount",
                    "type": "number",
                    "example": 2000
                },
                "discount_type": {
                    "description": "1 = percentage 2 = amount",
                    "type": "integer"
                },
                "id": {
                    "description": "model ID",
                    "type": "string",
                    "format": "uuid"
                },
                "income": {
                    "description": "Income",
                    "type": "number",
                    "example": 5000
                },
                "invoice_number": {
                    "description": "Invoice Number",
                    "type": "integer"
                },
                "modifier_id": {
                    "description": "modifier id",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "example": "pembayaran infaq"
                },
                "no_ref": {
                    "description": "No Ref",
                    "type": "string",
                    "example": "INFQ00001"
                },
                "note": {
                    "description": "Note",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "outcome": {
                    "description": "Outcome",
                    "type": "number",
                    "example": 3000
                },
                "paymentid": {
                    "description": "PaymentID",
                    "type": "string",
                    "format": "uuid"
                },
                "sort": {
                    "description": "sort (increment)",
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "tax": {
                    "description": "Tax",
                    "type": "number",
                    "example": 3000
                },
                "tax_type": {
                    "description": "Tax Type",
                    "type": "integer"
                },
                "total": {
                    "description": "Total",
                    "type": "number",
                    "example": 8000
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "example": "income"
                },
                "updated_at": {
                    "description": "updated at automatically changed on put or add on post",
                    "type": "string",
                    "format": "date-time"
                },
                "userid": {
                    "description": "UserID",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "model.TransactionAPI": {
            "type": "object",
            "properties": {
                "categoryid": {
                    "description": "CategoryID",
                    "type": "string",
                    "format": "uuid"
                },
                "contact": {
                    "description": "Contact",
                    "type": "string",
                    "example": "08423423432"
                },
                "contact_name": {
                    "description": "Contact Name",
                    "type": "string",
                    "example": "pak guru"
                },
                "description": {
                    "description": "Description",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "discount": {
                    "description": "Discount",
                    "type": "number",
                    "example": 2000
                },
                "discount_type": {
                    "description": "1 = percentage 2 = amount",
                    "type": "integer"
                },
                "income": {
                    "description": "Income",
                    "type": "number",
                    "example": 5000
                },
                "invoice_number": {
                    "description": "Invoice Number",
                    "type": "integer"
                },
                "name": {
                    "description": "Name",
                    "type": "string",
                    "example": "pembayaran infaq"
                },
                "no_ref": {
                    "description": "No Ref",
                    "type": "string",
                    "example": "INFQ00001"
                },
                "note": {
                    "description": "Note",
                    "type": "string",
                    "example": "lorem ipsum"
                },
                "outcome": {
                    "description": "Outcome",
                    "type": "number",
                    "example": 3000
                },
                "paymentid": {
                    "description": "PaymentID",
                    "type": "string",
                    "format": "uuid"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "tax": {
                    "description": "Tax",
                    "type": "number",
                    "example": 3000
                },
                "tax_type": {
                    "description": "Tax Type",
                    "type": "integer"
                },
                "total": {
                    "description": "Total",
                    "type": "number",
                    "example": 8000
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "example": "income"
                },
                "userid": {
                    "description": "UserID",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address",
                    "type": "string",
                    "example": "jl. Klaten"
                },
                "created_at": {
                    "description": "created at automatically inserted on post",
                    "type": "string",
                    "format": "date-time"
                },
                "creator_id": {
                    "description": "creator id",
                    "type": "string",
                    "format": "uuid"
                },
                "email": {
                    "description": "Email",
                    "type": "string",
                    "example": "user@mail.com"
                },
                "first_name": {
                    "description": "FirstName",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender",
                    "type": "string",
                    "example": "male"
                },
                "group_id": {
                    "description": "GroupID",
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "description": "model ID",
                    "type": "string",
                    "format": "uuid"
                },
                "is_admin": {
                    "description": "Status Verified",
                    "type": "integer",
                    "example": 0
                },
                "join_date": {
                    "description": "JoinDate",
                    "type": "string",
                    "format": "date-time"
                },
                "last_name": {
                    "description": "LastName",
                    "type": "string"
                },
                "modifier_id": {
                    "description": "modifier id",
                    "type": "string",
                    "format": "uuid"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "role_id": {
                    "description": "Role",
                    "type": "string",
                    "format": "uuid"
                },
                "sort": {
                    "description": "sort (increment)",
                    "type": "integer",
                    "example": 1
                },
                "status": {
                    "description": "Status",
                    "type": "integer",
                    "example": 0
                },
                "status_verified": {
                    "description": "Status Verified",
                    "type": "integer",
                    "example": 0
                },
                "surname": {
                    "description": "Surname",
                    "type": "string"
                },
                "updated_at": {
                    "description": "updated at automatically changed on put or add on post",
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "armada_muhammad"
                }
            }
        },
        "model.UserAPI": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address",
                    "type": "string",
                    "example": "jl. Klaten"
                },
                "email": {
                    "description": "Email",
                    "type": "string",
                    "example": "user@mail.com"
                },
                "first_name": {
                    "description": "FirstName",
                    "type": "string"
                },
                "gender": {
                    "description": "Gender",
                    "type": "string",
                    "example": "male"
                },
                "group_id": {
                    "description": "GroupID",
                    "type": "string",
                    "format": "uuid"
                },
                "is_admin": {
                    "description": "Status Verified",
                    "type": "integer",
                    "example": 0
                },
                "join_date": {
                    "description": "JoinDate",
                    "type": "string",
                    "format": "date-time"
                },
                "last_name": {
                    "description": "LastName",
                    "type": "string"
                },
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "role_id": {
                    "description": "Role",
                    "type": "string",
                    "format": "uuid"
                },
                "status": {
                    "description": "Status",
                    "type": "integer",
                    "example": 0
                },
                "status_verified": {
                    "description": "Status Verified",
                    "type": "integer",
                    "example": 0
                },
                "surname": {
                    "description": "Surname",
                    "type": "string"
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "armada_muhammad"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}